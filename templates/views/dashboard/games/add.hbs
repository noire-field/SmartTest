<!DOCTYPE html>
<html lang="en">
  <head>
    {{> dashboard/meta_header }}
  </head>
  <body id="page-top">
    <div id="wrapper">
      {{> dashboard/sidebar }}
      <div id="content-wrapper" class="d-flex flex-column">
        <div id="content">
          {{> dashboard/header }}
          <div class="container-fluid">
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
              <h1 class="h3 mb-0 text-gray-800">Tạo trò chơi</h1>
              <a href="{{ GetAdminPageUrl 'Games'}}" class="btn btn-primary btn-sm"><i class="fas fa-arrow-circle-left mr-2"></i>Quay về</a>
            </div>
            {{#IfEqualBlock status 'error'}}
              <div class="alert alert-danger small">
                {{#each errors}}
                  <p class="my-0"><i class="fas fa-times mr-2"></i>{{ this }}</p>
                {{/each}}
              </div>
            {{/IfEqualBlock}}
            <div class="row">
              <div id="vue-app" class="col-md-12">
                <form class="mt-3">
                  <div class="row">
                    <div class="col-md-7">
                      <div class="form-group">
                        <label for="input-gamename"><b>Tên trò chơi:</b></label>
                        <input type="text" class="form-control" v-model="gameName" id="input-gamename" name="input-gamename" placeholder="VD: Đố vui môn toán học">
                      </div>
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-md-7">
                      <div class="form-group">
                        <label for="input-subjectid"><b>Bộ đề:</b> <small>(Toàn bộ câu hỏi của bộ đề này sẽ được thêm)</small></label>
                        <select class="custom-select" v-model="gameSubjectID" name="input-subjectid">
                        {{#each subjectList}}
                          <option value="{{ this.SubjectID }}">{{ this.SubjectName }} ({{ CombineName this.FirstName this.LastName }})</option>
                        {{/each}}
                        </select>
                      </div>
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-md-3">
                      <div class="form-group">
                        <label for="input-questtime"><b>Thời gian trả lời mỗi câu:</b> <small>(giây)</small></label>
                        <input type="number" class="form-control" v-model="questTime" id="input-questtime" name="input-questtime" min="5" max="999" value="20">
                      </div>
                    </div>
                    <div class="col-md-4">
                      <div class="form-group">
                        <label for="input-pincode"><b>Mã PIN:</b> <small>(5 chữ số, hệ thống chọn ngẫu nhiên nếu bỏ trống)</small></label>
                        <input type="text" class="form-control" v-model="gamePINCode" id="input-pincode" name="input-pincode" min="10000" max="99999" placeholder="VD: 97775">
                      </div>
                    </div>
                  </div>
                  <div>
                    <button @click="gameCheck" id="submit-check" name="submit-check" type="submit" class="btn btn-primary mx-auto"><i class="fas fa-clipboard-check mr-2"></i>Xem trước</button>
                    <button refs="btnCreate" @click="gameCreate" id="submit-create" name="submit-create" type="submit" class="btn btn-info mx-auto"><i class="fas fa-plus-circle mr-2"></i>Tạo trò chơi</button>
                  </div>
                </form>
                <div class="modal fade" tabindex="-1" role="dialog" id="modal-preview" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title text-primary" id="modal-preview"><i class="fas fa-clipboard-check mr-2"></i>Xem trước câu hỏi trong trò chơi</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body">
                        <div v-if="fetchingData" class="text-center"><img class="icon-loading mr-2" src="/img/loading2.gif"><span>Vui lòng chờ...</span></div>
                        <div v-else="fetchingData">
                          <div v-if="previewError.isError" class="alert alert-danger">
                            <ul>
                              <li v-for="e in previewError.errorText">{? e ?}</li>
                            </ul>
                          </div>
                          <div v-else="previewError.isError">
                            <p class="font-weight-bold text-dark">Đây là những câu hỏi sẽ xuất hiện trong trò chơi</p>
                              <ol>
                                <li v-for="q in previewQuests" class="text-dark">{? q.CONTENT ?}</li>
                              </ol>
                          </div>
                        </div>
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Footer -->
        {{> dashboard/footer }}
        <!-- End of Footer -->
      </div>
    </div>

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
      <i class="fas fa-angle-up"></i>
    </a>

    {{> dashboard/meta_footer }}

    <script src="/js/vue.js"></script>
    <script src="/js/axios.min.js"></script>
    <script>
      var vm = new Vue({
        el: "#vue-app",
        delimiters: ["{?","?}"],
        data: {
          fetchingData: false,
          previewed: false,
          gameName: "",
          gameSubjectID: 0,
          questTime: 20,
          gamePINCode: "",
          previewQuests: [],
          previewError: {
            isError: false,
            errorText: []
          }
        },
        methods: {
          gameCheck: function(e) {
            e.preventDefault();

            if(vm.fetchingData)
              return;

            var t = {
              "NAME": vm.gameName,
              "SUBJECTID": Number(vm.gameSubjectID),
              "QUESTTIME": Number(vm.questTime),
              "PIN": vm.gamePINCode
            };

            var checkResult = vm.checkValidTest(t);
            if(!checkResult.result) {
              alert(checkResult.error);
              return;
            }

            axios.post("{{ GetAdminPageUrl 'Games' }}/preview", { game: t })
            .then(({ data }) => {
              if(data.status) {
                vm.previewed = true;
                vm.previewQuests = data.quests;
              } else {
                vm.previewError = {
                  isError: true,
                  errorText: data.errors
                }
              }

              vm.fetchingData = false;
            })
            .catch((error) => {
              vm.fetchingData = false;
              vm.previewError = {
                isError: true,
                errorText: ['Không thể kết nối tới API']
              }
            });

            vm.fetchingData = true;
            $("#modal-preview").modal("show");
          },
          gameCreate: function(e) {
            e.preventDefault();

            if(vm.fetchingData)
              return;
            if(!vm.previewed) {
              alert("Vui lòng xem trước, trước khi tạo trò chơi")
              return;
            }

            var g = {
                "NAME": vm.gameName,
                "SUBJECTID": Number(vm.gameSubjectID),
                "QUESTTIME": Number(vm.questTime),
                "PIN": vm.gamePINCode
            };

            var checkResult = vm.checkValidTest(g);
            if(!checkResult.result) {
              alert(checkResult.error);
              return;
            }

            axios.post("{{ GetAdminPageUrl 'Games' }}/add", { game: g })
            .then(({ data }) => {
              if(data.status) {
                return window.location = "{{ GetAdminPageUrl 'Games' }}";
              } else {
                alert(data.errors.join(', '));
              }

              vm.fetchingData = false;
            })
            .catch((error) => {
              alert("Có gì đó bị sai ở phía server, không thể tạo trò chơi");
              vm.fetchingData = false;
            });

            vm.fetchingData = true;
          },
          checkValidTest: function(t) {
            if(t.NAME.length <= 0 || t.NAME.length > 128)
              return { result: false, error: "Tên trò chơi phải từ 1 đến 128 ký tự" };
            if(t.SUBJECTID <= 0)
              return { result: false, error: "Vui lòng chọn bộ đề" };
            if(t.QUESTTIME <= 5 || t.QUESTTIME > 999)
              return { result: false, error: "Thời gian trả lời mỗi câu phải từ 5 đến 1000 giây" };
            if(t.PIN.length > 0 && !(new RegExp(/^\d{5}$/).test(t.PIN)))
              return { result: false, error: "Mã PIN phải là 5 chữ số (hoặc để trống)" };

            return { result: true, error: "" };
          }
        }
      });
    </script>
  </body>
</html>
